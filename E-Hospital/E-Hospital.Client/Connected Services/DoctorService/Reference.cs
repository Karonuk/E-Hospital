//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_Hospital.Client.DoctorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/E_Hospital.BLL.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(E_Hospital.Client.DoctorService.PatientDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(E_Hospital.Client.DoctorService.DoctorDto))]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private E_Hospital.Client.DoctorService.UserRoles RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public E_Hospital.Client.DoctorService.UserRoles Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientDto", Namespace="http://schemas.datacontract.org/2004/07/E_Hospital.BLL.Data")]
    [System.SerializableAttribute()]
    public partial class PatientDto : E_Hospital.Client.DoctorService.UserDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalCardField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalCard {
            get {
                return this.MedicalCardField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalCardField, value) != true)) {
                    this.MedicalCardField = value;
                    this.RaisePropertyChanged("MedicalCard");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorDto", Namespace="http://schemas.datacontract.org/2004/07/E_Hospital.BLL.Data")]
    [System.SerializableAttribute()]
    public partial class DoctorDto : E_Hospital.Client.DoctorService.UserDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecializationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecializationName {
            get {
                return this.SpecializationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecializationNameField, value) != true)) {
                    this.SpecializationNameField = value;
                    this.RaisePropertyChanged("SpecializationName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRoles", Namespace="http://schemas.datacontract.org/2004/07/E_Hospital.BLL.Data")]
    public enum UserRoles : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Doctor = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Patient = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitRequestDto", Namespace="http://schemas.datacontract.org/2004/07/E_Hospital.BLL.Data")]
    [System.SerializableAttribute()]
    public partial class VisitRequestDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private E_Hospital.Client.DoctorService.DoctorDto DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private E_Hospital.Client.DoctorService.PatientDto PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public E_Hospital.Client.DoctorService.DoctorDto Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public E_Hospital.Client.DoctorService.PatientDto Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitTime {
            get {
                return this.VisitTimeField;
            }
            set {
                if ((this.VisitTimeField.Equals(value) != true)) {
                    this.VisitTimeField = value;
                    this.RaisePropertyChanged("VisitTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DoctorService.IDoctorService", CallbackContract=typeof(E_Hospital.Client.DoctorService.IDoctorServiceCallback))]
    public interface IDoctorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorService/GetScheduleForToday", ReplyAction="http://tempuri.org/IDoctorService/GetScheduleForTodayResponse")]
        E_Hospital.Client.DoctorService.VisitRequestDto[] GetScheduleForToday(E_Hospital.Client.DoctorService.DoctorDto doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorService/GetScheduleForToday", ReplyAction="http://tempuri.org/IDoctorService/GetScheduleForTodayResponse")]
        System.Threading.Tasks.Task<E_Hospital.Client.DoctorService.VisitRequestDto[]> GetScheduleForTodayAsync(E_Hospital.Client.DoctorService.DoctorDto doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorService/GetPendingRequests", ReplyAction="http://tempuri.org/IDoctorService/GetPendingRequestsResponse")]
        E_Hospital.Client.DoctorService.VisitRequestDto[] GetPendingRequests(E_Hospital.Client.DoctorService.DoctorDto doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorService/GetPendingRequests", ReplyAction="http://tempuri.org/IDoctorService/GetPendingRequestsResponse")]
        System.Threading.Tasks.Task<E_Hospital.Client.DoctorService.VisitRequestDto[]> GetPendingRequestsAsync(E_Hospital.Client.DoctorService.DoctorDto doctor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoctorService/ChangeRequestState")]
        void ChangeRequestState(int visitRequestId, bool isApproved);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoctorService/ChangeRequestState")]
        System.Threading.Tasks.Task ChangeRequestStateAsync(int visitRequestId, bool isApproved);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoctorService/ReceiveVisitRequest")]
        void ReceiveVisitRequest(E_Hospital.Client.DoctorService.DoctorDto doctor, E_Hospital.Client.DoctorService.VisitRequestDto visitRequest);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoctorService/ReceiveVisitRequest")]
        System.Threading.Tasks.Task ReceiveVisitRequestAsync(E_Hospital.Client.DoctorService.DoctorDto doctor, E_Hospital.Client.DoctorService.VisitRequestDto visitRequest);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoctorService/Logout")]
        void Logout(E_Hospital.Client.DoctorService.DoctorDto doctor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoctorService/Logout")]
        System.Threading.Tasks.Task LogoutAsync(E_Hospital.Client.DoctorService.DoctorDto doctor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoctorServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoctorService/UpdatePendingRequests")]
        void UpdatePendingRequests(E_Hospital.Client.DoctorService.VisitRequestDto visitRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoctorServiceChannel : E_Hospital.Client.DoctorService.IDoctorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoctorServiceClient : System.ServiceModel.DuplexClientBase<E_Hospital.Client.DoctorService.IDoctorService>, E_Hospital.Client.DoctorService.IDoctorService {
        
        public DoctorServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DoctorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DoctorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public E_Hospital.Client.DoctorService.VisitRequestDto[] GetScheduleForToday(E_Hospital.Client.DoctorService.DoctorDto doctor) {
            return base.Channel.GetScheduleForToday(doctor);
        }
        
        public System.Threading.Tasks.Task<E_Hospital.Client.DoctorService.VisitRequestDto[]> GetScheduleForTodayAsync(E_Hospital.Client.DoctorService.DoctorDto doctor) {
            return base.Channel.GetScheduleForTodayAsync(doctor);
        }
        
        public E_Hospital.Client.DoctorService.VisitRequestDto[] GetPendingRequests(E_Hospital.Client.DoctorService.DoctorDto doctor) {
            return base.Channel.GetPendingRequests(doctor);
        }
        
        public System.Threading.Tasks.Task<E_Hospital.Client.DoctorService.VisitRequestDto[]> GetPendingRequestsAsync(E_Hospital.Client.DoctorService.DoctorDto doctor) {
            return base.Channel.GetPendingRequestsAsync(doctor);
        }
        
        public void ChangeRequestState(int visitRequestId, bool isApproved) {
            base.Channel.ChangeRequestState(visitRequestId, isApproved);
        }
        
        public System.Threading.Tasks.Task ChangeRequestStateAsync(int visitRequestId, bool isApproved) {
            return base.Channel.ChangeRequestStateAsync(visitRequestId, isApproved);
        }
        
        public void ReceiveVisitRequest(E_Hospital.Client.DoctorService.DoctorDto doctor, E_Hospital.Client.DoctorService.VisitRequestDto visitRequest) {
            base.Channel.ReceiveVisitRequest(doctor, visitRequest);
        }
        
        public System.Threading.Tasks.Task ReceiveVisitRequestAsync(E_Hospital.Client.DoctorService.DoctorDto doctor, E_Hospital.Client.DoctorService.VisitRequestDto visitRequest) {
            return base.Channel.ReceiveVisitRequestAsync(doctor, visitRequest);
        }
        
        public void Logout(E_Hospital.Client.DoctorService.DoctorDto doctor) {
            base.Channel.Logout(doctor);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(E_Hospital.Client.DoctorService.DoctorDto doctor) {
            return base.Channel.LogoutAsync(doctor);
        }
    }
}
